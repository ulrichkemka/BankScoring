stages:
  - test

#--------------------------------------------------------------#
#                        TESTING JOBS                          #
#--------------------------------------------------------------#

frontend_unit_tests:
  stage: test
  cache:
    paths:
      - frontend/node_modules/
  image: node:19-slim
  script:
    - cd frontend
    - npm install
    - npm run test


backend_unit_tests:
  stage: test
  image: python:3.11
  services:
    - mongo:latest  # Utilisation de MongoDB comme service
  variables:
    MONGO_HOST: "mongo"
    MONGO_PORT: 27017
    MONGO_DB: "farmd_test"
    MONGO_USER: "mongodbadmin"
    MONGO_PASSWORD: "wpnimdabdognom"
    # Autres variables d'environnement tir√©es de votre .env
    SECRET_KEY: "98153798f1616ba9e65c2cbcdb3fd3e3a6297b2002f6936b72823fd21ce609d9"
    FIRST_SUPERUSER: "admin@farmd.com"
    FIRST_SUPERUSER_PASSWORD: "admin"
    BACKEND_CORS_ORIGINS: '["http://localhost", "http://localhost:5173", "http://localhost:3000", "http://localhost:8080"]'
    VITE_BACKEND_API_URL: "http://localhost:8000/api/v1/"
  cache:
    paths:
      - .venv/
      - backend/.pytest_cache/
  before_script:
    - python -m venv .venv
    - source .venv/bin/activate
    - cd backend
    - pip install poetry
    - apt-get update -qq
    - apt-get install -y unrar
    - unrar e ./app/routers/model.rar ./app/routers/
    - poetry install --with dev
    # - pip install pytest pytest-cov
    # - pip install -r backend/requirements.txt
  script:
    # - cd backend
    - pytest --maxfail=1 --disable-warnings tests/  # Lancer les tests unitaires avec pytest
  interruptible: true
